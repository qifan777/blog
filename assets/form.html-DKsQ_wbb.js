import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-SNR_bOrM.js";const p={},o=t(`<h1 id="form构建" tabindex="-1"><a class="header-anchor" href="#form构建"><span>Form构建</span></a></h1><h2 id="form节点" tabindex="-1"><a class="header-anchor" href="#form节点"><span>Form节点</span></a></h2><p>先读取form10k数据，构建form节点</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">FormRepository</span> formRepository<span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@SneakyThrows</span>
    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;node&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> fileDir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;F:\\\\workspace\\\\code\\\\learn\\\\sec-edgar-notebooks\\\\data\\\\sample\\\\form10k&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">File</span><span class="token punctuation">[</span><span class="token punctuation">]</span> files <span class="token operator">=</span> fileDir<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">File</span> file <span class="token operator">:</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> form10K <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token class-name">Form10K</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> fullText <span class="token operator">=</span> <span class="token string">&quot;About &quot;</span> <span class="token operator">+</span>
                           <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> form10K<span class="token punctuation">.</span><span class="token function">getNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                           <span class="token string">&quot;...&quot;</span> <span class="token operator">+</span>
                           form10K<span class="token punctuation">.</span><span class="token function">getItem1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                           <span class="token string">&quot;\\n&quot;</span> <span class="token operator">+</span>
                           form10K<span class="token punctuation">.</span><span class="token function">getItem1a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                           <span class="token string">&quot;\\n&quot;</span> <span class="token operator">+</span>
                           form10K<span class="token punctuation">.</span><span class="token function">getItem7</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                           <span class="token string">&quot;\\n&quot;</span> <span class="token operator">+</span>
                           form10K<span class="token punctuation">.</span><span class="token function">getItem7a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> formId <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;.json&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">var</span> form <span class="token operator">=</span> <span class="token class-name">Form</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>formId<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">fullText</span><span class="token punctuation">(</span>fullText<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">cusip6</span><span class="token punctuation">(</span>form10K<span class="token punctuation">.</span><span class="token function">getCusip6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>form10K<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            formRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="form与chunk的关联" tabindex="-1"><a class="header-anchor" href="#form与chunk的关联"><span>Form与Chunk的关联</span></a></h2><h3 id="partof关系" tabindex="-1"><a class="header-anchor" href="#partof关系"><span>PartOf关系</span></a></h3><p>根据formId关联<code>Chunk</code>节点和<code>Form</code>节点，然后使用<code>merge</code>创建<code>PART_OF</code>关系。</p><div class="language-cypher line-numbers-mode" data-ext="cypher" data-title="cypher"><pre class="language-cypher"><code><span class="token keyword">match</span> <span class="token punctuation">(</span>c<span class="token operator">:</span><span class="token class-name">Chunk</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>f<span class="token operator">:</span><span class="token class-name">Form</span><span class="token punctuation">)</span> <span class="token keyword">where</span> c<span class="token punctuation">.</span>formId<span class="token operator">=</span>f<span class="token punctuation">.</span>id
<span class="token keyword">merge</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">[</span>r<span class="token operator">:</span><span class="token relationship property">PART_OF</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
<span class="token keyword">return</span> <span class="token function">count</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;relationship/section&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createSectionRelationship</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        neo4jClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
                        match (c:Chunk),(f:Form) where c.chunkSeqId=0 and f.id = c.formId
                        merge (f)-[r:SECTION {item:c.item}] -&gt; (c)
                        return count(r)
                        &quot;&quot;&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="section关系" tabindex="-1"><a class="header-anchor" href="#section关系"><span>Section关系</span></a></h3><p>form关联Chunk链接的头节点，<code>c.chunkSeqId=0</code>代表该节点是开头。<code>{item:c.item}</code>是给<code>SECTION</code>关系添加属性。之前说过一个form有多个<code>item</code>因此需要该属性做区分。</p><div class="language-cypher line-numbers-mode" data-ext="cypher" data-title="cypher"><pre class="language-cypher"><code><span class="token keyword">match</span> <span class="token punctuation">(</span>c<span class="token operator">:</span><span class="token class-name">Chunk</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>f<span class="token operator">:</span><span class="token class-name">Form</span><span class="token punctuation">)</span> <span class="token keyword">where</span> c<span class="token punctuation">.</span>chunkSeqId<span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">and</span> f<span class="token punctuation">.</span>id <span class="token operator">=</span> c<span class="token punctuation">.</span>formId
<span class="token keyword">merge</span> <span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">[</span>r<span class="token operator">:</span><span class="token class-name">SECTION</span> <span class="token punctuation">{</span>item<span class="token operator">:</span>c<span class="token punctuation">.</span>item<span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span>
<span class="token keyword">return</span> <span class="token function">count</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;relationship/section&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createSectionRelationship</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        neo4jClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
                        match (c:Chunk),(f:Form) where c.chunkSeqId=0 and f.id = c.formId
                        merge (f)-[r:SECTION {item:c.item}] -&gt; (c)
                        return count(r)
                        &quot;&quot;&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),e=[o];function c(u,i){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","form.html.vue"]]);export{k as default};
