import{_ as u}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as k,c as r,d as n,e as s,b as o,w as a,a as c}from"./app-t87EN4QZ.js";const d={},v=n("h1",{id:"订单预支付",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#订单预支付"},[n("span",null,"订单预支付")])],-1),m=n("figure",null,[n("img",{src:"https://pay.wechatpay.cn/wiki/doc/apiv3/assets/img/pay/wechatpay/6_2.png",alt:"微信小程序支付流程图",tabindex:"0",loading:"lazy"}),n("figcaption",null,"微信小程序支付流程图")],-1),b=c(`<p>4-8是预支付阶段，后端会调用微信支付接口生成一个预支付订单，订单信息，包括订单金额、支付人信息、支付相关参数等。</p><p>9-15是小程序端发起支付用户输入密码确认支付阶段。</p><h2 id="依赖和配置" tabindex="-1"><a class="header-anchor" href="#依赖和配置"><span>依赖和配置</span></a></h2><h3 id="maven依赖" tabindex="-1"><a class="header-anchor" href="#maven依赖"><span>maven依赖</span></a></h3><p><code>wx-java-pay-spring-boot-starter</code>集成了微信支付相关的API，只需要配置相关的密钥信息即可开始使用。</p><div class="language-pom line-numbers-mode" data-ext="pom" data-title="pom"><pre class="language-pom"><code>      &lt;dependency&gt;
        &lt;groupId&gt;com.github.binarywang&lt;/groupId&gt;
        &lt;artifactId&gt;wx-java-pay-spring-boot-starter&lt;/artifactId&gt;
        &lt;version&gt;\${wechat.version}&lt;/version&gt;
      &lt;/dependency&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="密钥配置" tabindex="-1"><a class="header-anchor" href="#密钥配置"><span>密钥配置</span></a></h3><p><code>application.yml</code></p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">wx</span><span class="token punctuation">:</span>
  <span class="token key atrule">pay</span><span class="token punctuation">:</span>
    <span class="token key atrule">appId</span><span class="token punctuation">:</span> appid <span class="token comment"># 小程序appid</span>
    <span class="token key atrule">mchId</span><span class="token punctuation">:</span> mchid <span class="token comment">#商户id</span>
    <span class="token key atrule">apiV3Key</span><span class="token punctuation">:</span> v3Key <span class="token comment">#微信支付V3密钥</span>
    <span class="token key atrule">certSerialNo</span><span class="token punctuation">:</span> 4C144AABC0CC486EC0AB2DD492DCE6A2ZE2E6268 <span class="token comment"># 证书序列号</span>
    <span class="token key atrule">privateKeyPath</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>wechat/apiclient_key.pem <span class="token comment">#apiclient_key.pem证书文件的绝对路径或者以classpath:开头的类路径</span>
    <span class="token key atrule">privateCertPath</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>wechat/apiclient_cert.pem  <span class="token comment">#apiclient_cert.pem证书文件的绝对路径或者以classpath:开头的类路径</span>
    <span class="token key atrule">notifyUrl</span><span class="token punctuation">:</span> <span class="token string">&quot;https://www.jarcheng.top/test-api/productOrder/notify&quot;</span> <span class="token comment">#支付成功回调地址，填写你的服务器地址</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置文件读取" tabindex="-1"><a class="header-anchor" href="#配置文件读取"><span>配置文件读取</span></a></h3><p><code>WxPayPropertiesExtension</code>在<code>WxPayProperties</code>的基础上拓展了<code>notifyUrl</code>字段。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>
    prefix <span class="token operator">=</span> <span class="token string">&quot;wx.pay&quot;</span>
<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WxPayPropertiesExtension</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token class-name">String</span> notifyUrl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),g=n("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@SpringBootApplication"),s(`
`),n("span",{class:"token annotation punctuation"},"@EnableImplicitApi"),s(`
`),n("span",{class:"token annotation punctuation"},"@EnableConfigurationProperties"),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"WxPayPropertiesExtension"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MallServerApplication"),s(),n("span",{class:"token punctuation"},"{"),s(`

  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"SpringApplication"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"MallServerApplication"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(" args"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=c(`<h2 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>api</span></a></h2><p><code>io.qifan.mall.server.order.service.ProductOrderService#prepay</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;{id}/prepay&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token class-name">WxPayUnifiedOrderV3Result<span class="token punctuation">.</span>JsapiResult</span> <span class="token function">prepay</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> productOrderService<span class="token punctuation">.</span><span class="token function">prepay</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发送预支付事件" tabindex="-1"><a class="header-anchor" href="#发送预支付事件"><span>发送预支付事件</span></a></h2><p><code>io.qifan.mall.server.order.service.ProductOrderService#prepay</code></p><p>使用订单状态机，向状态机发送相关的信息让状态机寻找响应的处理器。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token class-name">JsapiResult</span> <span class="token function">prepay</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ProductOrder</span> productOrder <span class="token operator">=</span> productOrderRepository
        <span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>
            <span class="token class-name">ProductOrderFetcher</span><span class="token punctuation">.</span>$
                <span class="token punctuation">.</span><span class="token function">allScalarFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">payment</span><span class="token punctuation">(</span><span class="token class-name">PaymentFetcher</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">payType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode<span class="token punctuation">.</span>NotFindError</span><span class="token punctuation">,</span> <span class="token string">&quot;订单不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">StateEvent</span> stateEvent <span class="token operator">=</span> <span class="token class-name">StateEvent</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">orderState</span><span class="token punctuation">(</span>productOrder<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKeyEnName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">eventType</span><span class="token punctuation">(</span><span class="token string">&quot;PREPAY&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">sceneId</span><span class="token punctuation">(</span>productOrder<span class="token punctuation">.</span><span class="token function">payment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">payType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKeyEnName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">businessCode</span><span class="token punctuation">(</span><span class="token string">&quot;PRODUCT_ORDER&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">JsapiResult</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> stateMachine<span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>stateEvent<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setOrderId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="预支付上下文" tabindex="-1"><a class="header-anchor" href="#预支付上下文"><span>预支付上下文</span></a></h2><p>存储预支付下单请求，<code>WxPayUnifiedOrderV3Request</code>是调用微信微信服务器的请求参数。以及<code>JsapiResult</code>是预支付下单的响应结果。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PrepayWeChatContext</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token class-name">String</span> orderId<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">WxPayUnifiedOrderV3Request</span> wxPayUnifiedOrderV3Request<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">WxPayUnifiedOrderV3Result<span class="token punctuation">.</span>JsapiResult</span> jsapiResult<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="预支付处理器" tabindex="-1"><a class="header-anchor" href="#预支付处理器"><span>预支付处理器</span></a></h2><h3 id="处理器" tabindex="-1"><a class="header-anchor" href="#处理器"><span>处理器</span></a></h3><p>订单预支付状态处理器 <code>PrepayWeChatProcessor</code>，用于处理订单状态为 &quot;TO_BE_PAID&quot;，事件为 &quot;PREPAY&quot;，场景为 &quot;WE_CHAT_PAY&quot; 的情况。</p><ol><li><p><strong><code>@OrderStateProcessor</code> 注解：</strong></p><ul><li>标记了该类为订单状态处理器，并指定了处理的订单状态为 &quot;TO_BE_PAID&quot;，事件为 &quot;PREPAY&quot;，场景为 &quot;WE_CHAT_PAY&quot;。</li></ul></li><li><p><strong><code>@Slf4j</code> 注解：</strong></p><ul><li>使用 Lombok 提供的注解，自动生成日志记录器。</li></ul></li><li><p><strong><code>@AllArgsConstructor</code> 注解：</strong></p><ul><li>使用 Lombok 提供的注解，生成包含所有参数的构造方法。</li></ul></li><li><p><strong>继承自 <code>AbstractStateProcessor</code>：</strong></p><ul><li>该类继承了一个抽象的订单状态处理器 <code>AbstractStateProcessor</code>，并实现了其中的抽象方法。</li><li>泛型类型为 <code>&lt;WxPayUnifiedOrderV3Result.JsapiResult, PrepayWeChatContext&gt;</code>，表示该处理器处理的是返回结果类型为 <code>WxPayUnifiedOrderV3Result.JsapiResult</code>，上下文类型为 <code>PrepayWeChatContext</code> 的订单状态。</li></ul></li><li><p><strong>构造方法参数：</strong></p><ul><li><code>WxPayService wxPayService</code>：微信支付服务对象。</li><li><code>ObjectMapper objectMapper</code>：用于序列化和反序列化的对象映射工具。</li><li><code>RedisTemplate&lt;String, Object&gt; redisTemplate</code>：Redis 缓存模板。</li><li><code>ProductOrderRepository productOrderRepository</code>：商品订单的数据仓库。</li><li><code>UserWeChatRepository userWeChatRepository</code>：用户微信信息的数据仓库。</li><li><code>WxPayPropertiesExtension wxPayPropertiesExtension</code>：微信支付配置的扩展属性。</li><li><code>WxPayProperties wxPayProperties</code>：微信支付配置的基本属性。</li></ul></li></ol><p>总体而言，该处理器用于处理订单状态为 &quot;TO_BE_PAID&quot;，事件为 &quot;PREPAY&quot;，场景为 &quot;WE_CHAT_PAY&quot; 的情况，其中包含了与微信支付相关的业务逻辑。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@OrderStateProcessor</span><span class="token punctuation">(</span>state <span class="token operator">=</span> <span class="token string">&quot;TO_BE_PAID&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=</span> <span class="token string">&quot;PREPAY&quot;</span><span class="token punctuation">,</span> sceneId <span class="token operator">=</span> <span class="token string">&quot;WE_CHAT_PAY&quot;</span><span class="token punctuation">,</span> bizCode <span class="token operator">=</span> <span class="token string">&quot;PRODUCT_ORDER&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PrepayWeChatProcessor</span> <span class="token keyword">extends</span>
    <span class="token class-name">AbstractStateProcessor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WxPayUnifiedOrderV3Result<span class="token punctuation">.</span>JsapiResult</span><span class="token punctuation">,</span> <span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">WxPayService</span> wxPayService<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ObjectMapper</span> objectMapper<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> redisTemplate<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ProductOrderRepository</span> productOrderRepository<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserWeChatRepository</span> userWeChatRepository<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">WxPayPropertiesExtension</span> wxPayPropertiesExtension<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">WxPayProperties</span> wxPayProperties<span class="token punctuation">;</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">prepare</span><span class="token punctuation">(</span><span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// 忽略...</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token annotation punctuation">@SneakyThrows</span>
  <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">JsapiResult</span><span class="token punctuation">&gt;</span></span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// 忽略...</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getNextState</span><span class="token punctuation">(</span><span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// 忽略...</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WxPayUnifiedOrderV3Result<span class="token punctuation">.</span>JsapiResult</span><span class="token punctuation">&gt;</span></span> <span class="token function">action</span><span class="token punctuation">(</span><span class="token class-name">String</span> nextState<span class="token punctuation">,</span>
      <span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// 忽略...</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WxPayUnifiedOrderV3Result<span class="token punctuation">.</span>JsapiResult</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">String</span> nextState<span class="token punctuation">,</span>
      <span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// 忽略...</span>
  <span class="token punctuation">}</span>


  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="预支付请求体构建-prepare阶段" tabindex="-1"><a class="header-anchor" href="#预支付请求体构建-prepare阶段"><span>预支付请求体构建-prepare阶段</span></a></h3><ol><li><p><strong>获取订单信息：</strong></p><ul><li>通过订单ID（<code>context.getContext().getOrderId()</code>）从数据库中查询订单信息。</li><li>使用 <code>ProductOrderFetcher.$.allScalarFields().payment(PaymentFetcher.$.allScalarFields())</code> 配置订单信息的查询，包括订单本身的所有标量字段以及关联的支付信息。</li></ul></li><li><p><strong>获取当前用户关联的微信用户：</strong></p><ul><li>查询当前用户关联的微信用户信息，使用 <code>UserWeChatTable.$</code> 表示 <code>UserWeChat</code> 数据表。</li><li>使用 <code>userWeChatRepository.sql().createQuery(weChatTable)</code> 构建 SQL 查询语句。</li><li>查询条件为当前用户ID，使用 <code>weChatTable.userId().eq(StpUtil.getLoginIdAsString())</code>。</li><li>通过 <code>select(weChatTable)</code> 进行结果选择，并通过 <code>fetchOptional()</code> 获取可选的微信用户信息。</li></ul></li><li><p><strong>构建微信支付请求对象 <code>WxPayUnifiedOrderV3Request</code>：</strong></p><ul><li>创建一个 <code>WxPayUnifiedOrderV3Request</code> 对象用于发起微信支付。</li><li>设置支付价格，将订单的支付金额（以分为单位）赋给 <code>amount.setTotal</code>。</li><li>获取支付人信息，设置支付人的 <code>openid</code> 为当前用户的微信 OpenID。</li><li>设置其他支付相关参数，包括回调地址、小程序 AppID、商家号、支付描述、订单系统的订单号、过期时间等。</li></ul></li><li><p><strong>设置预支付订单请求对象：</strong></p><ul><li>将构建好的 <code>WxPayUnifiedOrderV3Request</code> 对象设置到上下文中，以备后续的微信支付请求。</li></ul></li><li><p><strong>日志记录：</strong></p><ul><li>使用日志记录器 <code>log</code> 记录预支付订单内容填写的日志信息。</li></ul></li></ol><p><code>prepare</code> 方法主要用于准备微信支付的预支付订单信息，包括订单金额、支付人信息、支付相关参数等。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">prepare</span><span class="token punctuation">(</span><span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ProductOrder</span> productOrder <span class="token operator">=</span>
        productOrderRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">ProductOrderFetcher</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">allScalarFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">payment</span><span class="token punctuation">(</span><span class="token class-name">PaymentFetcher</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">allScalarFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode<span class="token punctuation">.</span>NotFindError</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">DateTimeFormatter</span> dateTimeFormatter <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ssXXX&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ZonedDateTime</span> dateTime <span class="token operator">=</span> <span class="token class-name">ZonedDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">plusHours</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 查找当前用户关联的微信用户</span>
    <span class="token class-name">UserWeChatTable</span> weChatTable <span class="token operator">=</span> <span class="token class-name">UserWeChatTable</span><span class="token punctuation">.</span>$<span class="token punctuation">;</span>
    <span class="token class-name">UserWeChat</span> userWeChat <span class="token operator">=</span> userWeChatRepository<span class="token punctuation">.</span><span class="token function">sql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createQuery</span><span class="token punctuation">(</span>weChatTable<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>weChatTable<span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">getLoginIdAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>weChatTable<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">fetchOptional</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode<span class="token punctuation">.</span>NotFindError</span><span class="token punctuation">,</span> <span class="token string">&quot;非小程序用户, 请注册&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">WxPayUnifiedOrderV3Request</span> wxPayUnifiedOrderV3Request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WxPayUnifiedOrderV3Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 支付价格</span>
    <span class="token class-name">WxPayUnifiedOrderV3Request<span class="token punctuation">.</span>Amount</span> amount <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WxPayUnifiedOrderV3Request<span class="token punctuation">.</span>Amount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    amount<span class="token punctuation">.</span><span class="token function">setTotal</span><span class="token punctuation">(</span>productOrder<span class="token punctuation">.</span><span class="token function">payment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">payAmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>
            <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取支付人信息</span>
    <span class="token class-name">WxPayUnifiedOrderV3Request<span class="token punctuation">.</span>Payer</span> payer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WxPayUnifiedOrderV3Request<span class="token punctuation">.</span>Payer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    payer<span class="token punctuation">.</span><span class="token function">setOpenid</span><span class="token punctuation">(</span>userWeChat<span class="token punctuation">.</span><span class="token function">openId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    wxPayUnifiedOrderV3Request<span class="token punctuation">.</span><span class="token function">setPayer</span><span class="token punctuation">(</span>payer<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setAmount</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span>
        <span class="token comment">// 回调地址</span>
        <span class="token punctuation">.</span><span class="token function">setNotifyUrl</span><span class="token punctuation">(</span>wxPayPropertiesExtension<span class="token punctuation">.</span><span class="token function">getNotifyUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">// 小程序appid</span>
        <span class="token punctuation">.</span><span class="token function">setAppid</span><span class="token punctuation">(</span>wxPayProperties<span class="token punctuation">.</span><span class="token function">getAppId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">// 商家号</span>
        <span class="token punctuation">.</span><span class="token function">setMchid</span><span class="token punctuation">(</span>wxPayProperties<span class="token punctuation">.</span><span class="token function">getMchId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">// 支付描述</span>
        <span class="token punctuation">.</span><span class="token function">setDescription</span><span class="token punctuation">(</span>productOrder<span class="token punctuation">.</span><span class="token function">remark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">// 订单系统的订单号</span>
        <span class="token punctuation">.</span><span class="token function">setOutTradeNo</span><span class="token punctuation">(</span>productOrder<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">// 过期时间</span>
        <span class="token punctuation">.</span><span class="token function">setTimeExpire</span><span class="token punctuation">(</span>dateTimeFormatter<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>dateTime<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setDescription</span><span class="token punctuation">(</span><span class="token string">&quot;www.jarcheng.top&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setWxPayUnifiedOrderV3Request</span><span class="token punctuation">(</span>wxPayUnifiedOrderV3Request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;预支付订单内容：{}&quot;</span><span class="token punctuation">,</span> wxPayUnifiedOrderV3Request<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="预支付校验-check阶段" tabindex="-1"><a class="header-anchor" href="#预支付校验-check阶段"><span>预支付校验-check阶段</span></a></h3><ol><li><p><strong>获取订单信息：</strong></p><ul><li>通过订单ID（<code>context.getContext().getOrderId()</code>）从数据库中查询订单信息。</li><li>使用 <code>ProductOrderFetcher.$</code> 查询订单本身的所有标量字段，以及设置 <code>creator(true)</code> 表示同时查询订单创建者信息，设置 <code>items</code> 表示查询订单项信息，包括订单项的 <code>skuCount</code> 和关联的商品SKU信息。</li></ul></li><li><p><strong>校验订单拥有者：</strong></p><ul><li>检查当前登录用户的ID是否与订单的创建者ID一致，确保支付的是自己的订单。如果不一致，抛出异常表示无法支付他人订单。</li></ul></li><li><p><strong>查询是否存在预支付信息：</strong></p><ul><li>利用 Redis 缓存查询是否存在预支付信息，通过 <code>redisTemplate.opsForValue().get(&quot;prepay:&quot; + context.getContext().getOrderId())</code> 获取预支付信息。</li></ul></li><li><p><strong>判断是否存在预支付信息：</strong></p><ul><li>如果存在预支付信息，则直接将该信息转换为 <code>WxPayUnifiedOrderV3Result.JsapiResult</code> 对象，并返回包含该对象的 <code>R</code> 结果。</li><li>在这里，通过反序列化操作，将预支付信息从 Redis 中取出，并转换为对应的 Java 对象。</li></ul></li><li><p><strong>日志记录：</strong></p><ul><li>使用日志记录器 <code>log</code> 记录是否存在预支付的订单。</li></ul></li><li><p><strong>返回结果：</strong></p><ul><li>如果存在预支付信息，将 <code>R</code> 对象的状态码设置为 <code>ResultCode.Fail.getCode()</code>，表示后续不需要执行其他操作，直接返回包含预支付信息的 <code>R</code> 对象。</li></ul></li><li><p><strong>返回空结果：</strong></p><ul><li>如果没有预支付信息，直接返回一个表示成功的 <code>R</code> 对象，其中的数据部分为 <code>null</code>。</li></ul></li></ol><p>总体而言，该 <code>check</code> 方法主要用于在进行微信支付前，校验订单的拥有者是否为当前登录用户，并检查是否存在预支付信息。如果存在预支付信息，则直接返回包含该信息的 <code>R</code> 对象，并不执行后续的支付操作；如果不存在预支付信息，则返回一个表示成功的 <code>R</code> 对象。这一步骤有助于避免重复发起支付请求，提高支付效率。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@Override</span>
  <span class="token annotation punctuation">@SneakyThrows</span>
  <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">JsapiResult</span><span class="token punctuation">&gt;</span></span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ProductOrder</span> productOrder <span class="token operator">=</span> productOrderRepository
        <span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token class-name">ProductOrderFetcher</span><span class="token punctuation">.</span>$
                <span class="token punctuation">.</span><span class="token function">creator</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">items</span><span class="token punctuation">(</span><span class="token class-name">ProductOrderItemFetcher</span><span class="token punctuation">.</span>$
                    <span class="token punctuation">.</span><span class="token function">skuCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">productSku</span><span class="token punctuation">(</span><span class="token class-name">ProductSkuFetcher</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">allScalarFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode<span class="token punctuation">.</span>NotFindError</span><span class="token punctuation">,</span> <span class="token string">&quot;订单不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">getLoginIdAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>productOrder<span class="token punctuation">.</span><span class="token function">creator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode<span class="token punctuation">.</span>NotGrant</span><span class="token punctuation">,</span> <span class="token string">&quot;无法支付他人订单&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Object</span> prepayRes <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;prepay:&quot;</span> <span class="token operator">+</span> context<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prepayRes <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;已存在预支付订单：{}&quot;</span><span class="token punctuation">,</span> prepayRes<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 如果存在预支付订单则直接发起支付</span>
      <span class="token class-name">WxPayUnifiedOrderV3Result<span class="token punctuation">.</span>JsapiResult</span> jsapiResult <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>
          objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>prepayRes<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">WxPayUnifiedOrderV3Result<span class="token punctuation">.</span>JsapiResult</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WxPayUnifiedOrderV3Result<span class="token punctuation">.</span>JsapiResult</span><span class="token punctuation">&gt;</span></span> ok <span class="token operator">=</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>jsapiResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 不执行后续的方法</span>
      ok<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token class-name">ResultCode<span class="token punctuation">.</span>Fail</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> ok<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="调用接口预支付下单-action阶段" tabindex="-1"><a class="header-anchor" href="#调用接口预支付下单-action阶段"><span>调用接口预支付下单-action阶段</span></a></h3><p>对应支付流程图中的4，6，7阶段。</p><ol><li><p><strong>发起预支付订单：</strong></p><ul><li>使用 <code>wxPayService.createOrderV3</code> 方法通过微信支付服务发起预支付订单。</li><li>传递了支付类型参数 <code>TradeTypeEnum.JSAPI</code> 表示使用 JSAPI 进行支付。</li><li>将预支付订单的请求对象（<code>context.getContext().getWxPayUnifiedOrderV3Request()</code>）传递给 <code>createOrderV3</code> 方法。</li></ul></li><li><p><strong>捕获异常：</strong></p><ul><li>捕获 <code>WxPayException</code> 异常，该异常表示微信支付接口返回的错误信息。</li><li>如果发生异常，抛出自定义业务异常，并将微信支付接口返回的错误信息作为异常信息。</li></ul></li><li><p><strong>记录日志：</strong></p><ul><li>在预支付订单下单成功后，使用日志记录器 <code>log</code> 记录下单成功的日志信息。</li></ul></li><li><p><strong>设置上下文信息：</strong></p><ul><li>将预支付订单的结果（<code>wxPayAppOrderResult</code>）设置到上下文中，以备后续的支付处理。</li></ul></li><li><p><strong>返回结果：</strong></p><ul><li>返回一个包含预支付订单结果的 <code>R</code> 对象，其中状态码表示成功，数据部分为预支付订单的结果对象。</li></ul></li></ol><p>总体而言，这两个方法主要用于获取下一个状态和发起预支付订单的操作。<code>getNextState</code> 方法返回订单状态不变，仍然是待支付状态；<code>action</code> 方法则调用微信支付服务发起预支付订单，并记录相关的日志信息，最后返回包含预支付订单结果的 <code>R</code> 对象。这两个方法是状态机中状态迁移和状态动作的一部分。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getNextState</span><span class="token punctuation">(</span><span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 状态不变，仍然是待支付状态</span>
    <span class="token keyword">return</span> <span class="token class-name">ProductOrderStatus</span><span class="token punctuation">.</span><span class="token constant">TO_BE_PAID</span><span class="token punctuation">.</span><span class="token function">getKeyEnName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WxPayUnifiedOrderV3Result<span class="token punctuation">.</span>JsapiResult</span><span class="token punctuation">&gt;</span></span> <span class="token function">action</span><span class="token punctuation">(</span><span class="token class-name">String</span> nextState<span class="token punctuation">,</span>
      <span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">JsapiResult</span>
        wxPayAppOrderResult<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      wxPayAppOrderResult <span class="token operator">=</span> wxPayService<span class="token punctuation">.</span><span class="token function">createOrderV3</span><span class="token punctuation">(</span><span class="token class-name">TradeTypeEnum</span><span class="token punctuation">.</span><span class="token constant">JSAPI</span><span class="token punctuation">,</span>
          context<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">getWxPayUnifiedOrderV3Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">WxPayException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode<span class="token punctuation">.</span>TransferStatusError</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getReturnMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;预支付订单，下单成功：{}&quot;</span><span class="token punctuation">,</span> wxPayAppOrderResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setJsapiResult</span><span class="token punctuation">(</span>wxPayAppOrderResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>wxPayAppOrderResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="预支付订单保存-save阶段" tabindex="-1"><a class="header-anchor" href="#预支付订单保存-save阶段"><span>预支付订单保存-save阶段</span></a></h3><ol><li><p><strong>记录日志：</strong></p><ul><li>使用日志记录器 <code>log</code> 记录保存预支付订单的日志信息。</li></ul></li><li><p><strong>设置预支付订单过期时间：</strong></p><ul><li>利用 Redis 缓存将预支付订单信息存储起来，使用 <code>redisTemplate.opsForValue().set</code> 方法。</li><li>设置键为 <code>&quot;prepay:&quot; + context.getContext().getOrderId()</code>，值为 <code>context.getContext().getJsapiResult()</code>。</li><li>设置过期时间为 1 小时，即预支付订单的有效期为 1 小时。</li></ul></li><li><p><strong>返回结果：</strong></p><ul><li>返回一个包含预支付订单结果的 <code>R</code> 对象，其中状态码表示成功，数据部分为预支付订单的结果对象。</li></ul></li></ol><p>总体而言，<code>save</code> 方法主要用于保存预支付订单的信息到 Redis 缓存中，并设置了预支付订单的过期时间。通过保存预支付订单信息到缓存中，可以在下次支付请求时直接获取缓存中的信息，避免了重复发起支付请求。返回的 <code>R</code> 对象包含了预支付订单结果作为成功的标志。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WxPayUnifiedOrderV3Result<span class="token punctuation">.</span>JsapiResult</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">String</span> nextState<span class="token punctuation">,</span>
      <span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PrepayWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;保存预支付订单&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 一个小时后预支付订单过期</span>
    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;prepay:&quot;</span> <span class="token operator">+</span> context<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getOrderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            context<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getJsapiResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">HOURS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getJsapiResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="小程序发起支付" tabindex="-1"><a class="header-anchor" href="#小程序发起支付"><span>小程序发起支付</span></a></h2><p>对应支付流程图中的9和13阶段。</p><p>在前端发起支付的过程中，通过按钮点击事件 <code>handlePay</code> 触发支付操作。以下是该前端代码的主要步骤解释：</p><ol><li><p><strong>按钮点击事件：</strong></p><ul><li>在页面中通过 <code>&lt;nut-button&gt;</code> 组件渲染了一个按钮，点击按钮触发 <code>handlePay</code> 方法。</li></ul></li><li><p><strong>支付处理函数 <code>handlePay</code>：</strong></p><ul><li>使用 <code>api.productOrderController.prepay</code> 发起请求，该请求向后端发起预支付订单的请求，其中传递了订单的 <code>id</code>。</li><li>在请求成功后，获取后端返回的支付参数。</li></ul></li><li><p><strong>调用 <code>Taro.requestPayment</code>：</strong></p><ul><li>使用 Taro 框架的 <code>Taro.requestPayment</code> 方法发起微信支付。</li><li>传递了微信支付所需的参数，包括 <code>nonceStr</code>、<code>package</code>、<code>paySign</code>、<code>timeStamp</code>、<code>signType</code> 等。</li><li>定义了支付成功和支付失败的回调函数。</li></ul></li><li><p><strong>支付成功回调：</strong></p><ul><li>在支付成功的回调函数中，显示支付成功的提示信息。</li></ul></li><li><p><strong>支付失败回调：</strong></p><ul><li>在支付失败的回调函数中，将失败的信息打印到控制台。</li></ul></li></ol><p>总体而言，前端的支付流程是通过按钮点击触发支付处理函数 <code>handlePay</code>，该函数向后端发起请求获取支付参数，然后调用微信支付接口 <code>Taro.requestPayment</code> 进行支付。支付成功后显示成功提示，支付失败则在控制台打印失败信息。</p><p><code>order-details.vue</code></p>`,39),f=n("div",{class:"language-html line-numbers-mode","data-ext":"html","data-title":"html"},[n("pre",{class:"language-html"},[n("code",null,[s("        "),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("nut-button")]),s(),n("span",{class:"token attr-name"},"type"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("danger"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"@click"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("handlePay"),n("span",{class:"token punctuation"},'"')]),s(`
          `),n("span",{class:"token punctuation"},">")]),s("立即支付 ￥{{ order.payment.payAmount }}"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("nut-button")]),s(`
        `),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts","data-title":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"const"),s(),n("span",{class:"token function-variable function"},"handlePay"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("order"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    api`),n("span",{class:"token punctuation"},"."),s("productOrderController"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"prepay"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" id"),n("span",{class:"token operator"},":"),s(" order"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),s("id "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("res"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      Taro`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"requestPayment"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
        nonceStr`),n("span",{class:"token operator"},":"),s(" res"),n("span",{class:"token punctuation"},"."),s("nonceStr"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token keyword"},"package"),n("span",{class:"token operator"},":"),s(" res"),n("span",{class:"token punctuation"},"."),s("packageValue"),n("span",{class:"token punctuation"},","),s(`
        paySign`),n("span",{class:"token operator"},":"),s(" res"),n("span",{class:"token punctuation"},"."),s("paySign"),n("span",{class:"token punctuation"},","),s(`
        timeStamp`),n("span",{class:"token operator"},":"),s(" res"),n("span",{class:"token punctuation"},"."),s("timeStamp"),n("span",{class:"token punctuation"},","),s(`
        signType`),n("span",{class:"token operator"},":"),s(" res"),n("span",{class:"token punctuation"},"."),s("signType "),n("span",{class:"token keyword"},"as"),s(),n("span",{class:"token string"},'"RSA"'),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token function-variable function"},"success"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
          Taro`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"showToast"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
            title`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"支付成功"'),n("span",{class:"token punctuation"},","),s(`
            icon`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"success"'),n("span",{class:"token punctuation"},","),s(`
          `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token function-variable function"},"fail"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),s("res"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
          `),n("span",{class:"token builtin"},"console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("res"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function x(P,w){const l=p("RouterLink"),i=p("Tabs");return k(),r("div",null,[v,m,n("p",null,[s("1-3是属于"),o(l,{to:"/project/qifan-mall/order/order-create.html"},{default:a(()=>[s("订单创建阶段")]),_:1})]),b,g,y,o(i,{id:"615",data:[{id:"html"},{id:"ts"}]},{title0:a(({value:t,isActive:e})=>[s("html")]),title1:a(({value:t,isActive:e})=>[s("ts")]),tab0:a(({value:t,isActive:e})=>[f]),tab1:a(({value:t,isActive:e})=>[h]),_:1})])}const O=u(d,[["render",x],["__file","order-prepay.html.vue"]]);export{O as default};
