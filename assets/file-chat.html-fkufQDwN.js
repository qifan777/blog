const t=JSON.parse('{"key":"v-82eba0b4","path":"/project/spring-ai/file-chat.html","title":"文件问答","lang":"zh-CN","frontmatter":{"description":"文件问答 如果你的数据量并没有非常的庞大，也不想做复杂的向量数据库构建，还有一种知识库方案就是直接读取文件的内容作为上下文问答。 文件问答文件问答 后端消息接收 之前接收前端的提问内容和拓展参数是这样的 现在为了接收文件，之前的json体就不适用了。因此需要将Content-Type 从 application/json 修改为 multipart/f...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/project/spring-ai/file-chat.html"}],["meta",{"property":"og:site_name","content":"起凡Code闲聊"}],["meta",{"property":"og:title","content":"文件问答"}],["meta",{"property":"og:description","content":"文件问答 如果你的数据量并没有非常的庞大，也不想做复杂的向量数据库构建，还有一种知识库方案就是直接读取文件的内容作为上下文问答。 文件问答文件问答 后端消息接收 之前接收前端的提问内容和拓展参数是这样的 现在为了接收文件，之前的json体就不适用了。因此需要将Content-Type 从 application/json 修改为 multipart/f..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-12T08:32:44.000Z"}],["meta",{"property":"article:author","content":"起凡"}],["meta",{"property":"article:modified_time","content":"2024-08-12T08:32:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文件问答\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-12T08:32:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"起凡\\",\\"url\\":\\"https://www.jarcheng.top\\"}]}"]]},"headers":[{"level":2,"title":"后端消息接收","slug":"后端消息接收","link":"#后端消息接收","children":[]},{"level":2,"title":"文件读取","slug":"文件读取","link":"#文件读取","children":[]},{"level":2,"title":"前端消息发送","slug":"前端消息发送","link":"#前端消息发送","children":[]}],"git":{"createdTime":1723451564000,"updatedTime":1723451564000,"contributors":[{"name":"linjiacheng","email":"1507906763@qq.com","commits":1}]},"readingTime":{"minutes":2.16,"words":648},"filePathRelative":"project/spring-ai/file-chat.md","localizedDate":"2024年8月12日","excerpt":"\\n<p>如果你的数据量并没有非常的庞大，也不想做复杂的向量数据库构建，还有一种知识库方案就是直接读取文件的内容作为上下文问答。</p>\\n<figure><figcaption>文件问答</figcaption></figure>\\n<h2>后端消息接收</h2>\\n<p>之前接收前端的提问内容和拓展参数是这样的</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code>    <span class=\\"token annotation punctuation\\">@PostMapping</span><span class=\\"token punctuation\\">(</span>value <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"chat\\"</span><span class=\\"token punctuation\\">,</span> produces <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">MediaType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">TEXT_EVENT_STREAM_VALUE</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Flux</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">ServerSentEvent</span><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">chat</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@RequestBody</span> <span class=\\"token class-name\\">AiMessageWrapper</span> input<span class=\\"token punctuation\\">)</span>\\n</code></pre></div>","autoDesc":true}');export{t as data};
