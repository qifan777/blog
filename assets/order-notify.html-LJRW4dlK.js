import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as e,c as o,d as n,e as s,b as c,w as l,a as u}from"./app-aucFxOpB.js";const i={},k=n("h1",{id:"订单支付回调",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#订单支付回调"},[n("span",null,"订单支付回调")])],-1),r=n("figure",null,[n("img",{src:"https://pay.wechatpay.cn/wiki/doc/apiv3/assets/img/pay/wechatpay/6_2.png",alt:"微信小程序支付流程图",tabindex:"0",loading:"lazy"}),n("figcaption",null,"微信小程序支付流程图")],-1),d=n("p",null,"用户支付成功后，16-18阶段微信服务器我会通知我方的服务器，通知内容是加密后的支付结果，需要解密后才能确认支付结果。",-1),v={class:"hint-container tip"},m=n("p",{class:"hint-container-title"},"提示",-1),b=u(`<h2 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>api</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;notify/wechat&quot;</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@ApiIgnore</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">paymentNotifyWechat</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">String</span> body<span class="token punctuation">,</span>
      <span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;Wechatpay-Timestamp&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> timestamp<span class="token punctuation">,</span>
      <span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;Wechatpay-Nonce&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> nonce<span class="token punctuation">,</span>
      <span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;Wechatpay-Signature&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> signature<span class="token punctuation">,</span>
      <span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;Wechatpay-Serial&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> serial<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">SignatureHeader</span> signatureHeader <span class="token operator">=</span> <span class="token class-name">SignatureHeader</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">signature</span><span class="token punctuation">(</span>signature<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">serial</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">nonce</span><span class="token punctuation">(</span>nonce<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">timeStamp</span><span class="token punctuation">(</span>timestamp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> productOrderService<span class="token punctuation">.</span><span class="token function">paymentNotifyWechat</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> signatureHeader<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发送支付回调事件" tabindex="-1"><a class="header-anchor" href="#发送支付回调事件"><span>发送支付回调事件</span></a></h2><p>订单支付成功后的异步通知处理逻辑</p><ul><li><p><strong>方法注解：</strong></p><ul><li>使用 <code>@SneakyThrows</code> 注解表示在方法内部捕获异常并转换为运行时异常，简化异常处理代码。</li></ul></li><li><p><strong>方法参数：</strong></p><ul><li><code>String body</code>: 微信支付回调的请求体，包含支付结果信息。</li><li><code>SignatureHeader signatureHeader</code>: 包含微信支付回调请求头的信息，如时间戳、随机数、签名等。</li></ul></li><li><p><strong>解密回调结果：</strong></p><ul><li>调用 <code>wxPayService.parseOrderNotifyV3Result</code> 方法解密微信支付回调结果，获取 <code>DecryptNotifyResult</code> 对象。</li></ul></li><li><p><strong>获取订单信息：</strong></p><ul><li>从解密的回调结果中获取商户订单号 <code>outTradeNo</code>。</li><li>使用商户订单号查询数据库，获取对应的订单信息 <code>productOrder</code>。</li></ul></li><li><p><strong>构建状态事件 <code>StateEvent</code>：</strong></p><ul><li>根据订单信息构建 <code>StateEvent</code> 对象，包括订单状态、事件类型、场景ID等信息。</li></ul></li><li><p><strong>调用状态机处理支付回调事件：</strong></p><ul><li>创建 <code>StateContext</code> 对象，传递 <code>StateEvent</code> 和包含解密结果的上下文对象 <code>NotifyWeChatContext</code>。</li><li>调用 <code>stateMachine.action</code> 方法，触发状态机处理支付回调事件。</li></ul></li><li><p><strong>返回处理结果：</strong></p><ul><li>返回处理结果，通常是一个包含处理信息的字符串。</li></ul></li></ul><p>该方法的主要作用是解密微信支付回调结果，获取订单信息，构建状态事件，然后调用状态机引擎处理支付回调事件。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@SneakyThrows</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">paymentNotifyWechat</span><span class="token punctuation">(</span><span class="token class-name">String</span> body<span class="token punctuation">,</span> <span class="token class-name">SignatureHeader</span> signatureHeader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">DecryptNotifyResult</span> notifyResult <span class="token operator">=</span> wxPayService<span class="token punctuation">.</span><span class="token function">parseOrderNotifyV3Result</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> signatureHeader<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> outTradeNo <span class="token operator">=</span> notifyResult<span class="token punctuation">.</span><span class="token function">getOutTradeNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ProductOrder</span> productOrder <span class="token operator">=</span> productOrderRepository
        <span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>outTradeNo<span class="token punctuation">,</span>
            <span class="token class-name">ProductOrderFetcher</span><span class="token punctuation">.</span>$
                <span class="token punctuation">.</span><span class="token function">allScalarFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">payment</span><span class="token punctuation">(</span><span class="token class-name">PaymentFetcher</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">payType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode<span class="token punctuation">.</span>NotFindError</span><span class="token punctuation">,</span> <span class="token string">&quot;订单不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">StateEvent</span> stateEvent <span class="token operator">=</span> <span class="token class-name">StateEvent</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">orderState</span><span class="token punctuation">(</span>productOrder<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKeyEnName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">eventType</span><span class="token punctuation">(</span><span class="token string">&quot;NOTIFY&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">sceneId</span><span class="token punctuation">(</span>productOrder<span class="token punctuation">.</span><span class="token function">payment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">payType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKeyEnName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">businessCode</span><span class="token punctuation">(</span><span class="token string">&quot;PRODUCT_ORDER&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> stateMachine<span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>stateEvent<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">NotifyWeChatContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setDecryptNotifyResult</span><span class="token punctuation">(</span>notifyResult<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="支付回调上下文" tabindex="-1"><a class="header-anchor" href="#支付回调上下文"><span>支付回调上下文</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotifyWeChatContext</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token class-name">DecryptNotifyResult</span> decryptNotifyResult<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">ProductOrder</span> productOrder<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="支付回调处理器" tabindex="-1"><a class="header-anchor" href="#支付回调处理器"><span>支付回调处理器</span></a></h2><ul><li><p><strong>类注解：</strong></p><ul><li><code>@OrderStateProcessor</code>: 指示该类是一个订单状态处理器，处理待支付订单状态，回调事件，微信支付场景。</li><li><code>@Slf4j</code>: 自动生成日志实例，用于日志记录。</li><li><code>@AllArgsConstructor</code>: 自动生成全参构造方法。</li></ul></li><li><p><strong>方法参数：</strong></p><ul><li><code>StateContext&lt;NotifyWeChatContext&gt; context</code>: 状态机上下文对象，包含了支付回调上下文。</li></ul></li><li><p><strong><code>prepare</code> 方法：</strong></p><ul><li>通过上下文获取微信支付回调结果和商户订单号。</li><li>查询订单信息，包括订单创建者、支付信息等。</li><li>使用 <code>ProductOrderDraft</code> 创建一个新的订单对象，更新支付信息，包括微信支付订单ID和支付时间。</li><li>将新创建的订单对象设置到上下文中，以便后续处理。</li></ul></li><li><p><strong><code>save</code> 方法：</strong></p><ul><li>从上下文中获取包含更新后支付信息的订单对象 <code>productOrder</code>。</li><li>切换当前登录用户到订单创建者，使用 <code>StpUtil.switchTo</code> 方法。</li><li>创建新的订单对象 <code>producedOrder</code>，并将状态设置为下一个状态。</li><li>调用订单仓库的 <code>save</code> 方法保存更新后的订单对象。</li><li>将保存后订单对象的ID包装成成功的响应返回。</li></ul></li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@OrderStateProcessor</span><span class="token punctuation">(</span>state <span class="token operator">=</span> <span class="token string">&quot;TO_BE_PAID&quot;</span><span class="token punctuation">,</span> event <span class="token operator">=</span> <span class="token string">&quot;NOTIFY&quot;</span><span class="token punctuation">,</span> sceneId <span class="token operator">=</span> <span class="token string">&quot;WE_CHAT_PAY&quot;</span><span class="token punctuation">,</span> bizCode <span class="token operator">=</span> <span class="token string">&quot;PRODUCT_ORDER&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotifyWeChatProcessor</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractStateProcessor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">NotifyWeChatContext</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ProductOrderRepository</span> orderRepository<span class="token punctuation">;</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">prepare</span><span class="token punctuation">(</span><span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NotifyWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">NotifyWeChatContext</span> notifyWeChatContext <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">DecryptNotifyResult</span> notifyResult <span class="token operator">=</span> notifyWeChatContext<span class="token punctuation">.</span><span class="token function">getDecryptNotifyResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> outTradeNo <span class="token operator">=</span> notifyResult<span class="token punctuation">.</span><span class="token function">getOutTradeNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ProductOrder</span> productOrder <span class="token operator">=</span> orderRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>outTradeNo<span class="token punctuation">,</span>
        <span class="token class-name">ProductOrderFetcher</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">allScalarFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">creator</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">payment</span><span class="token punctuation">(</span>
            <span class="token class-name">PaymentFetcher</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">allScalarFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode<span class="token punctuation">.</span>NotFindError</span><span class="token punctuation">,</span> <span class="token string">&quot;订单不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 设置微信支付订单id</span>
    <span class="token class-name">ProductOrder</span> producedOrder <span class="token operator">=</span> <span class="token class-name">ProductOrderDraft</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">produce</span><span class="token punctuation">(</span>productOrder<span class="token punctuation">,</span> draft <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
      draft<span class="token punctuation">.</span><span class="token function">payment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setTradeNo</span><span class="token punctuation">(</span>notifyResult<span class="token punctuation">.</span><span class="token function">getTransactionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">setPayTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    notifyWeChatContext<span class="token punctuation">.</span><span class="token function">setProductOrder</span><span class="token punctuation">(</span>producedOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NotifyWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 可以校验支付的金额是否正确</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getNextState</span><span class="token punctuation">(</span><span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NotifyWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">ProductOrderStatus</span><span class="token punctuation">.</span><span class="token constant">TO_BE_DELIVERED</span><span class="token punctuation">.</span><span class="token function">getKeyEnName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">action</span><span class="token punctuation">(</span><span class="token class-name">String</span> nextState<span class="token punctuation">,</span> <span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NotifyWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 后续拉新分成可以在这边发送事件</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">R</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token class-name">String</span> nextState<span class="token punctuation">,</span> <span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NotifyWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ProductOrder</span> productOrder <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProductOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">StpUtil</span><span class="token punctuation">.</span><span class="token function">switchTo</span><span class="token punctuation">(</span>productOrder<span class="token punctuation">.</span><span class="token function">creator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ProductOrder</span> producedOrder <span class="token operator">=</span> <span class="token class-name">ProductOrderDraft</span><span class="token punctuation">.</span>$<span class="token punctuation">.</span><span class="token function">produce</span><span class="token punctuation">(</span>productOrder<span class="token punctuation">,</span> draft <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
      draft<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">ProductOrderStatus</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>nextState<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">R</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>orderRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>producedOrder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">StateContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NotifyWeChatContext</span><span class="token punctuation">&gt;</span></span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function f(g,y){const a=p("RouterLink");return e(),o("div",null,[k,r,d,n("div",v,[m,n("p",null,[s("在"),c(a,{to:"/project/qifan-mall/order/order-prepay.html#%E9%A2%84%E6%94%AF%E4%BB%98%E8%AF%B7%E6%B1%82%E4%BD%93%E6%9E%84%E5%BB%BA-prepare%E9%98%B6%E6%AE%B5"},{default:l(()=>[s("预支付下单阶段")]),_:1}),s("已经配置好了回调地址，微信服务器会自动调用回调地址，通知支付结果。")])]),b])}const x=t(i,[["render",f],["__file","order-notify.html.vue"]]);export{x as default};
