const e=JSON.parse('{"key":"v-5b36f618","path":"/project/spring-ai/embedding.html","title":"嵌入模型","lang":"zh-CN","frontmatter":{"order":5,"description":"嵌入模型 如何用一段话去数据库查找数据？答案是向量求相似度。在高中的时候我们学过可以用cos求两个向量之间的夹角，cos值越大，夹角越小，夹角越小，相似度越高。 所以第一件事情需要将句子向量化，然后和向量数据库中的向量进行比较，找到最相似的向量。 嵌入模型就可以帮我们做到这件事情。 使用嵌入模型 请参考。本例使用的是阿里嵌入模型。 选择模型 文本嵌入 ","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/project/spring-ai/embedding.html"}],["meta",{"property":"og:site_name","content":"起凡Code闲聊"}],["meta",{"property":"og:title","content":"嵌入模型"}],["meta",{"property":"og:description","content":"嵌入模型 如何用一段话去数据库查找数据？答案是向量求相似度。在高中的时候我们学过可以用cos求两个向量之间的夹角，cos值越大，夹角越小，夹角越小，相似度越高。 所以第一件事情需要将句子向量化，然后和向量数据库中的向量进行比较，找到最相似的向量。 嵌入模型就可以帮我们做到这件事情。 使用嵌入模型 请参考。本例使用的是阿里嵌入模型。 选择模型 文本嵌入 "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-17T02:38:08.000Z"}],["meta",{"property":"article:author","content":"起凡"}],["meta",{"property":"article:modified_time","content":"2024-06-17T02:38:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"嵌入模型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-17T02:38:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"起凡\\",\\"url\\":\\"https://www.jarcheng.top\\"}]}"]]},"headers":[{"level":2,"title":"使用嵌入模型","slug":"使用嵌入模型","link":"#使用嵌入模型","children":[]}],"git":{"createdTime":1718591888000,"updatedTime":1718591888000,"contributors":[{"name":"linjiacheng","email":"1507906763@qq.com","commits":1}]},"readingTime":{"minutes":0.76,"words":228},"filePathRelative":"project/spring-ai/embedding.md","localizedDate":"2024年6月17日","excerpt":"\\n<p>如何用一段话去数据库查找数据？答案是向量求相似度。在高中的时候我们学过可以用cos求两个向量之间的夹角，cos值越大，夹角越小，夹角越小，相似度越高。</p>\\n<p>所以第一件事情需要将句子向量化，然后和向量数据库中的向量进行比较，找到最相似的向量。</p>\\n<p>嵌入模型就可以帮我们做到这件事情。</p>\\n<h2>使用嵌入模型</h2>\\n<p>请参考<a href=\\"/blog/project/spring-ai/config/base.html\\" target=\\"_blank\\">基础配置</a>。本例使用的是阿里嵌入模型。</p>\\n<p>选择模型</p>\\n<div class=\\"language-yaml\\" data-ext=\\"yml\\" data-title=\\"yml\\"><pre class=\\"language-yaml\\"><code>    <span class=\\"token comment\\"># 阿里灵积</span>\\n    <span class=\\"token key atrule\\">dash-scope</span><span class=\\"token punctuation\\">:</span>\\n      <span class=\\"token key atrule\\">api-key</span><span class=\\"token punctuation\\">:</span> xxx\\n      <span class=\\"token key atrule\\">enabled</span><span class=\\"token punctuation\\">:</span> <span class=\\"token boolean important\\">true</span>\\n      <span class=\\"token key atrule\\">chat</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token key atrule\\">model</span><span class=\\"token punctuation\\">:</span> qwen<span class=\\"token punctuation\\">-</span>max\\n      <span class=\\"token key atrule\\">embedding</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token comment\\"># 嵌入模型</span>\\n        <span class=\\"token key atrule\\">model</span><span class=\\"token punctuation\\">:</span> text<span class=\\"token punctuation\\">-</span>embedding<span class=\\"token punctuation\\">-</span>v2\\n</code></pre></div>","autoDesc":true}');export{e as data};
