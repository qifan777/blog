const e=JSON.parse('{"key":"v-af86b628","path":"/project/spring-ai/knowledge/backend.html","title":"后端实现","lang":"zh-CN","frontmatter":{"description":"后端实现 消息dto改造 将之前的 AiMessageInput 改造成 AiMessageWrapper，新增了一个 params 属性，用来传递一些参数。前端可以选择是否开启知识库。 QuestionAnswerAdvisor 之前已经介绍过，请参考之前的教程。 ","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/project/spring-ai/knowledge/backend.html"}],["meta",{"property":"og:site_name","content":"起凡Code闲聊"}],["meta",{"property":"og:title","content":"后端实现"}],["meta",{"property":"og:description","content":"后端实现 消息dto改造 将之前的 AiMessageInput 改造成 AiMessageWrapper，新增了一个 params 属性，用来传递一些参数。前端可以选择是否开启知识库。 QuestionAnswerAdvisor 之前已经介绍过，请参考之前的教程。 "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-20T02:02:33.000Z"}],["meta",{"property":"article:author","content":"起凡"}],["meta",{"property":"article:modified_time","content":"2024-06-20T02:02:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"后端实现\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-20T02:02:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"起凡\\",\\"url\\":\\"https://www.jarcheng.top\\"}]}"]]},"headers":[{"level":2,"title":"消息dto改造","slug":"消息dto改造","link":"#消息dto改造","children":[]},{"level":2,"title":"QuestionAnswerAdvisor","slug":"questionansweradvisor","link":"#questionansweradvisor","children":[]}],"git":{"createdTime":1718848953000,"updatedTime":1718848953000,"contributors":[{"name":"linjiacheng","email":"1507906763@qq.com","commits":1}]},"readingTime":{"minutes":0.98,"words":294},"filePathRelative":"project/spring-ai/knowledge/backend.md","localizedDate":"2024年6月20日","excerpt":"\\n<h2>消息dto改造</h2>\\n<p>将之前的 <code>AiMessageInput</code> 改造成 <code>AiMessageWrapper</code>，新增了一个 <code>params</code> 属性，用来传递一些参数。前端可以选择是否开启知识库。</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@Data</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">AiMessageWrapper</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">AiMessageInput</span> message<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">AiMessageParams</span> params<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token annotation punctuation\\">@Data</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">AiMessageParams</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">Boolean</span> enableVectorStore<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{e as data};
