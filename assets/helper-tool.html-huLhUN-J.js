import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as e,c as o,d as n,e as s,b as c,a as l}from"./app-5WUbVpEz.js";const i={},u=n("h1",{id:"helper工具",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#helper工具"},[n("span",null,"Helper工具")])],-1),r=n("h2",{id:"tablehelper",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tablehelper"},[n("span",null,"TableHelper")])],-1),k={href:"https://element-plus.gitee.io/zh-CN/component/loading.html#%E5%8C%BA%E5%9F%9F%E5%8A%A0%E8%BD%BD",target:"_blank",rel:"noopener noreferrer"},d=l(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>ElTable<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span><span class="token keyword">type</span> <span class="token class-name">Ref</span><span class="token punctuation">,</span> ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span>Page<span class="token punctuation">,</span> QueryRequest<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/__generated/model/static&#39;</span>
<span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">PageResult<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Pick<span class="token operator">&lt;</span>
    Page<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;content&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;number&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;size&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;totalElements&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;totalPages&#39;</span>
<span class="token operator">&gt;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useTableHelper <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
    <span class="token comment">// 调用后端的查询接口</span>
    <span class="token function-variable function">queryApi</span><span class="token operator">:</span> <span class="token punctuation">(</span>options<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">readonly</span> body<span class="token operator">:</span> QueryRequest<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>PageResult<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
    object<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span>
    <span class="token comment">// 查询条件</span>
    initQuery<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>
    <span class="token comment">// 分页数据后置处理</span>
    postProcessor<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> PageResult<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> pageData <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        content<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token builtin">number</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        size<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        totalElements<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        totalPages<span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Ref<span class="token operator">&lt;</span>PageResult<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;&gt;</span>
    <span class="token keyword">const</span> queryRequest <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        query<span class="token operator">:</span> initQuery <span class="token operator">??</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        pageNum<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        pageSize<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
        likeMode<span class="token operator">:</span> <span class="token string">&#39;ANYWHERE&#39;</span><span class="token punctuation">,</span>
        sorts<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>property<span class="token operator">:</span> <span class="token string">&#39;createdTime&#39;</span><span class="token punctuation">,</span> direction<span class="token operator">:</span> <span class="token string">&#39;DESC&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Ref<span class="token operator">&lt;</span>QueryRequest<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>
    <span class="token keyword">const</span> loading <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> tableSelectedRows <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Ref<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
    <span class="token comment">// ElTable实例</span>
    <span class="token keyword">const</span> table <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span>InstanceType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> ElTable<span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// 请求分页数据</span>
    <span class="token keyword">const</span> <span class="token function-variable function">loadTableData</span> <span class="token operator">=</span> <span class="token punctuation">(</span>request<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>QueryRequest<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        queryRequest<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token operator">...</span>queryRequest<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
            <span class="token operator">...</span>_<span class="token punctuation">.</span><span class="token function">omitBy</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> _<span class="token punctuation">.</span>isNull<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        queryRequest<span class="token punctuation">.</span>value<span class="token punctuation">.</span>query <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>_<span class="token punctuation">.</span><span class="token function">omitBy</span><span class="token punctuation">(</span>queryRequest<span class="token punctuation">.</span>value<span class="token punctuation">.</span>query<span class="token punctuation">,</span> _<span class="token punctuation">.</span>isEmpty<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token constant">T</span>
        loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token function">queryApi</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>body<span class="token operator">:</span> queryRequest<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
            <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>postProcessor <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">postProcessor</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
                pageData<span class="token punctuation">.</span>value <span class="token operator">=</span> res
                loading<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 重新请求分页数据，pageNum=1, pageSize=10</span>
    <span class="token keyword">const</span> <span class="token function-variable function">reloadTableData</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
        queryRequest<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>QueryRequest<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>pageNum<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> pageSize<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">}</span>
    <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">loadTableData</span><span class="token punctuation">(</span>queryRequest<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 获取表格选中的数据</span>
    <span class="token keyword">const</span> <span class="token function-variable function">getTableSelectedRows</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> tableSelectedRows<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span>
    <span class="token comment">// 当表格选择变动时更新选中的数据</span>
    <span class="token keyword">const</span> <span class="token function-variable function">handleSelectChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>selectedRows<span class="token operator">:</span> <span class="token constant">E</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        tableSelectedRows<span class="token punctuation">.</span>value <span class="token operator">=</span> selectedRows
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> handleSortChange <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
                                  prop<span class="token punctuation">,</span>
                                  order
                              <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        prop<span class="token operator">:</span> <span class="token builtin">string</span>
        order<span class="token operator">:</span> <span class="token string">&#39;ascending&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;descending&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> directionMap<span class="token operator">:</span> <span class="token punctuation">{</span> ascending<span class="token operator">:</span> <span class="token string">&#39;ASC&#39;</span><span class="token punctuation">;</span> descending<span class="token operator">:</span> <span class="token string">&#39;DESC&#39;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
            ascending<span class="token operator">:</span> <span class="token string">&#39;ASC&#39;</span><span class="token punctuation">,</span>
            descending<span class="token operator">:</span> <span class="token string">&#39;DESC&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> sorts <span class="token operator">=</span> queryRequest<span class="token punctuation">.</span>value<span class="token punctuation">.</span>sorts
        sorts<span class="token punctuation">[</span>sorts<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;direction&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> directionMap<span class="token punctuation">[</span>order<span class="token punctuation">]</span>
        sorts<span class="token punctuation">[</span>sorts<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;property&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> prop
        <span class="token function">reloadTableData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        table<span class="token punctuation">,</span>
        loading<span class="token punctuation">,</span>
        queryRequest<span class="token punctuation">,</span>
        tableSelectedRows<span class="token punctuation">,</span>
        pageData<span class="token punctuation">,</span>
        loadTableData<span class="token punctuation">,</span>
        reloadTableData<span class="token punctuation">,</span>
        getTableSelectedRows<span class="token punctuation">,</span>
        handleSortChange<span class="token punctuation">,</span>
        handleSelectChange
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dialoghelper" tabindex="-1"><a class="header-anchor" href="#dialoghelper"><span>DialogHelper</span></a></h2><p>DialogHelper将Dialog通用的变量抽取出来，每次新建一个Dialog时只需要调用useDialogHelper就可以快速写出一个对话框。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useDialogHelper</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> dialogData <span class="token operator">=</span> <span class="token generic-function"><span class="token function">reactive</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> visible<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> mode<span class="token operator">:</span> EditMode <span class="token punctuation">}</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        width<span class="token operator">:</span> <span class="token number">1200</span><span class="token punctuation">,</span>
        title<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        visible<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        mode<span class="token operator">:</span> <span class="token string">&#39;CREATE&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token function-variable function">closeDialog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        dialogData<span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">openDialog</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>mode<span class="token operator">?</span><span class="token operator">:</span> EditMode<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dialogData<span class="token punctuation">.</span>mode <span class="token operator">=</span> mode
        <span class="token punctuation">}</span>
        <span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        dialogData<span class="token punctuation">.</span>visible <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>dialogData<span class="token punctuation">,</span> closeDialog<span class="token punctuation">,</span> openDialog<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="queryhelper" tabindex="-1"><a class="header-anchor" href="#queryhelper"><span>queryHelper</span></a></h2><p>queryHelper抽取查询表单的通用变量和方法。辅助Query编写组件。</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> QueryHelper <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>initQuery<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> queryData <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span>query<span class="token operator">:</span> initQuery<span class="token punctuation">,</span> matchMode<span class="token operator">:</span> <span class="token string">&#39;VAGUE&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Ref<span class="token operator">&lt;</span><span class="token punctuation">{</span>
        query<span class="token operator">:</span> <span class="token constant">T</span>
        matchMode<span class="token operator">:</span> MatchMode
    <span class="token punctuation">}</span><span class="token operator">&gt;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">restQuery</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        queryData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>query <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>initQuery<span class="token punctuation">}</span>
        queryData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>matchMode <span class="token operator">=</span> <span class="token string">&#39;VAGUE&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>queryData<span class="token punctuation">,</span> restQuery<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function v(m,b){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,r,n("p",null,[s("TableHelper抽取了表格组件中的通用变量pageData(分页结果), queryRequest(分页请求), tableSelectedRows(已选数据), loading("),n("a",k,[s("v-loading"),c(a)]),s("), table(ElTable实例)。除了通用的变量外还有通用的方法。")]),d])}const f=t(i,[["render",v],["__file","helper-tool.html.vue"]]);export{f as default};
