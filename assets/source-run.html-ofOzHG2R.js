import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as l,c as o,d as a,e as n,b as s,w as c,a as e}from"./app-qcxwH9ew.js";const d="/blog/assets/image-XUovVxS8.png",u={},h=e(`<h1 id="源码运行" tabindex="-1"><a class="header-anchor" href="#源码运行"><span>源码运行</span></a></h1><h2 id="源码获取" tabindex="-1"><a class="header-anchor" href="#源码获取"><span>源码获取</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone  https://github.com/qifan777/uni-ai
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="后端运行" tabindex="-1"><a class="header-anchor" href="#后端运行"><span>后端运行</span></a></h2><h3 id="redis-stack安装" tabindex="-1"><a class="header-anchor" href="#redis-stack安装"><span>redis-stack安装</span></a></h3><p>redis-stack在redis的基础上增加了向量数据库的功能</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># todo 配置volume</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> redis-stack <span class="token parameter variable">--restart</span><span class="token operator">=</span>always  <span class="token parameter variable">-v</span> redis-data:/data <span class="token parameter variable">-p</span> <span class="token number">6379</span>:6379 <span class="token parameter variable">-p</span> <span class="token number">8001</span>:8001 <span class="token parameter variable">-e</span> <span class="token assign-left variable">REDIS_ARGS</span><span class="token operator">=</span><span class="token string">&quot;--requirepass 123456&quot;</span> redis/redis-stack:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mysql安装" tabindex="-1"><a class="header-anchor" href="#mysql安装"><span>mysql安装</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306 <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">--name</span> mysql8 <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">TZ</span><span class="token operator">=</span>Asia/Shanghai  <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_DATABASE</span><span class="token operator">=</span>uni_ai <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> mysql-data:/var/lib/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
mysql:8.0.26 <span class="token punctuation">\\</span>
mysqld --character-set-server<span class="token operator">=</span>utf8mb4 <span class="token punctuation">\\</span>
--collation-server<span class="token operator">=</span>utf8mb4_unicode_ci  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jdk17" tabindex="-1"><a class="header-anchor" href="#jdk17"><span>jdk17</span></a></h3>`,10),v={href:"https://injdk.cn/",target:"_blank",rel:"noopener noreferrer"},m=a("h3",{id:"gradle安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#gradle安装"},[a("span",null,"gradle安装")])],-1),b={href:"https://gradle.org/releases/",target:"_blank",rel:"noopener noreferrer"},k=a("code",null,"download binary-only",-1),g=e(`<p>安装完配置gradle镜像。在<code>init.d</code>文件夹下新建<code>init.gradle</code>.</p><div class="language-gradle line-numbers-mode" data-ext="gradle" data-title="gradle"><pre class="language-gradle"><code>allprojects <span class="token punctuation">{</span>
    <span class="token keyword">repositories</span> <span class="token punctuation">{</span>
        <span class="token function">mavenLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/public/&#39;</span> <span class="token punctuation">}</span>
        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/spring/&#39;</span><span class="token punctuation">}</span>
        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/google/&#39;</span><span class="token punctuation">}</span>
        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/gradle-plugin/&#39;</span><span class="token punctuation">}</span>
        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/spring-plugin/&#39;</span><span class="token punctuation">}</span>
        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/grails-core/&#39;</span><span class="token punctuation">}</span>
        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/apache-snapshots/&#39;</span><span class="token punctuation">}</span>
        <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="导入项目" tabindex="-1"><a class="header-anchor" href="#导入项目"><span>导入项目</span></a></h3><p>idea导入uni-ai。里面包含了uni-ai-admin和uni-ai-backend。</p><p>首先需要在idea的settings-&gt; build -&gt; build tools -&gt; gradle配置本地的gradle。</p><figure><img src="`+d+'" alt="gradle配置" tabindex="0" loading="lazy"><figcaption>gradle配置</figcaption></figure><div class="hint-container warning"><p class="hint-container-title">注意</p><p>然后一定要关闭idea重启一下，要不然idea会自动下载gradle，而不是使用本地的下载完且配置好镜像的gradle。</p></div><h3 id="配置数据库" tabindex="-1"><a class="header-anchor" href="#配置数据库"><span>配置数据库</span></a></h3><p>运行<code>uni-ai-backend/scripts/database.sql</code>下的数据库脚本，导入表结构信息。修改uni-ai-backend/server/src/main/resources/application-dev.yml下的数据库密码和redis密码。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>如果数据库和redis-stack的安装方式是使用我上面提供的docker命令，密码都是123456.</p></div><h3 id="配置密钥" tabindex="-1"><a class="header-anchor" href="#配置密钥"><span>配置密钥</span></a></h3>',11),f=a("code",null,"uni-ai-backend/server/src/main/resources/application.yml",-1),_=e('<h3 id="运行后端服务" tabindex="-1"><a class="header-anchor" href="#运行后端服务"><span>运行后端服务</span></a></h3><p><code>uni-ai-backend/server/src/main/java/io/qifan/server/ServerApplication.java</code></p><h2 id="前端运行" tabindex="-1"><a class="header-anchor" href="#前端运行"><span>前端运行</span></a></h2><h3 id="node-js安装" tabindex="-1"><a class="header-anchor" href="#node-js安装"><span>node.js安装</span></a></h3>',4),x={href:"https://nodejs.org/en",target:"_blank",rel:"noopener noreferrer"},y=e(`<h3 id="依赖安装" tabindex="-1"><a class="header-anchor" href="#依赖安装"><span>依赖安装</span></a></h3><p>在<code>uni-ai-admin目录</code>执行</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="api同步" tabindex="-1"><a class="header-anchor" href="#api同步"><span>API同步</span></a></h3><p>确保后端已启动，然后执行下面的命令。它可以把后端接口同步到前端，并且会生成每个接口的入参和返回类型的ts类型。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> run api-admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动"><span>启动</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="访问" tabindex="-1"><a class="header-anchor" href="#访问"><span>访问</span></a></h3><p>访问 <code>http://localhost:5177</code></p><p>账户：11111111111<br> 密码：123456</p>`,11);function j(q,E){const t=i("ExternalLinkIcon"),r=i("RouterLink");return l(),o("div",null,[h,a("p",null,[a("a",v,[n("国内jdk下载镜像"),s(t)])]),m,a("p",null,[a("a",b,[n("gradle安装网址"),s(t)]),n("下载最新版本的gradle，选择"),k,n("。")]),g,a("p",null,[s(r,{to:"/project/uni-ai/use/#ai%E5%8E%82%E5%95%86%E5%AF%86%E9%92%A5%E9%85%8D%E7%BD%AE"},{default:c(()=>[n("申请密钥")]),_:1}),n("完之后将相关信息填入"),f,n("。")]),_,a("p",null,[n("由于本项目是用vue3写的，需要较高本吧的node。去官网下载新版的"),a("a",x,[n("node.js"),s(t)]),n("也可以使用nvm管理不同版本的node。")]),y])}const w=p(u,[["render",j],["__file","source-run.html.vue"]]);export{w as default};
