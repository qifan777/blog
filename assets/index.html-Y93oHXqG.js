import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,a as t}from"./app-5WUbVpEz.js";const p="/blog/assets/image-y1IsSOCw.png",e={},o=t('<h1 id="前端显示二进制流图片" tabindex="-1"><a class="header-anchor" href="#前端显示二进制流图片"><span>前端显示二进制流图片</span></a></h1><h2 id="读取resource目录下的图片" tabindex="-1"><a class="header-anchor" href="#读取resource目录下的图片"><span>读取resource目录下的图片</span></a></h2><p>在resource目录下的文件（文件夹）编译后都会在classpath的根目录下下。如下图：<br><img src="'+p+`" alt="resource目录的含义" loading="lazy"></p><p>从类路径中读取名为&quot;logo.jpg&quot;的文件内容，并将其转换为字节数组。</p><ol><li><p><code>ClassPathResource(&quot;logo.jpg&quot;)</code>：这是创建一个Spring Framework中的<code>ClassPathResource</code>对象，它代表了一个应从类路径获取的资源。</p></li><li><p><code>.getInputStream()</code>：调用该方法会返回一个指向该资源的输入流（InputStream），通过这个输入流可以读取“logo.jpg”文件的实际内容。</p></li><li><p><code>.readAllBytes()</code>：进一步调用此方法会读取并返回输入流中的所有字节，即将“logo.jpg”图片文件的内容以字节数组的形式一次性读取出来。</p></li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;logo&quot;</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@CrossOrigin</span>
  <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getLogo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;logo.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readAllBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>ClassPathResource</code>是Spring框架中<code>org.springframework.core.io</code>包下的一个类，它主要用于表示类路径（classpath）中的资源。当你需要从项目的类路径下加载配置文件、静态资源等时，可以使用这个类。</p><p>函数还使用了<code>@CrossOrigin</code>注解来允许跨域请求。</p></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>如果你像读取系统上的文件，可以使用<code>FileSystemResource</code>，它表示的是文件系统中的资源。</p></div><h2 id="前端展示" tabindex="-1"><a class="header-anchor" href="#前端展示"><span>前端展示</span></a></h2><p>使用axios库从指定URL获取图片资源，并将其转化为Base64格式的字符串，以便可以直接作为图像源在网页中展示。</p><p>具体步骤如下：</p><ol><li><p>首先引入了<code>axios</code>库来进行HTTP请求，并使用Vue3的<code>ref</code>函数创建了一个响应式的变量<code>base64Image</code>，初始值为空字符串。</p></li><li><p>使用axios的<code>get</code>方法发起GET请求获取图片数据，配置项<code>responseType: &#39;arraybuffer&#39;</code>表示期望服务器返回二进制数据（ArrayBuffer）。</p></li><li><p>当请求成功后（进入<code>.then</code>的回调函数），首先从响应结果<code>res</code>中提取出ArrayBuffer数据。</p></li><li><p>将ArrayBuffer转换为Uint8Array，便于进一步操作。Uint8Array是一种能够存储原始8位无符号整数的TypedArray视图，适合处理二进制数据如图片、音频等。</p></li><li><p>然后通过<code>reduce</code>方法遍历Uint8Array中的每个字节，将其转换为其对应的字符编码并拼接到一起形成一个字符串。</p></li><li><p>使用<code>btoa</code>函数将这个由字节序列组成的字符串转换为Base64编码格式。</p></li><li><p>最后，将得到的Base64字符串格式化为符合Data URL Scheme的标准格式，即<code>data:image/*;base64,\${base64String}</code>，并将其赋值给<code>base64Image.value</code>。这样，在Vue模板中可以通过绑定<code>base64Image</code>来直接展示图片。</p></li></ol><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>base64Image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>base64Image<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> base64Image <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:8081/image/logo&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;arraybuffer&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    <span class="token comment">// 将ArrayBuffer转为Uint8Array方便处理</span>
    <span class="token keyword">const</span> arrayBuffer <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
    <span class="token keyword">const</span> uint8Array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>arrayBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 将Uint8Array转换为Base64字符串</span>
    <span class="token keyword">const</span> base64String <span class="token operator">=</span> <span class="token function">btoa</span><span class="token punctuation">(</span>uint8Array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> byte</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> data <span class="token operator">+</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>byte<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 设置图片的Base64源</span>
    base64Image<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">data:image/*;base64,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>base64String<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),c=[o];function l(i,u){return s(),a("div",null,c)}const d=n(e,[["render",l],["__file","index.html.vue"]]);export{d as default};
